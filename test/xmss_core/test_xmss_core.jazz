from XMSS require "xmss_core/xmss_core.jtmpl"

/* These exported functions are just for testing */

/////////////////////////////////// TREEHASH ///////////////////////////////////////////////////////

/*
export fn treehash_jazz(
    reg ptr u8[XMSS_N] root,
    reg ptr u8[XMSS_N] sk_seed,
    reg ptr u8[XMSS_N] pub_seed,
    reg ptr u32[8] subtree_addr
) -> reg ptr u8[XMSS_N]
{
    root = __treehash_(root, sk_seed, pub_seed, 0, XMSS_FULL_HEIGHT, subtree_addr);
    return root;
}

export fn xmssmt_core_seed_keypair_jazz(
    reg ptr u8[XMSS_PK_BYTES] pk, 
    reg ptr u8[XMSS_SK_BYTES] sk,
    reg ptr u8[3 * XMSS_N] seed
) -> reg ptr u8[XMSS_PK_BYTES], reg ptr u8[XMSS_SK_BYTES], reg u64
{
    reg u64 res;
    
    pk, sk = __xmssmt_core_seed_keypair(pk, sk, seed);

    ?{}, res = #set0();
    return pk, sk, res;
}

export fn xmssmt_core_keypair_jazz(
    reg ptr u8[XMSS_PK_BYTES] pk, 
    reg ptr u8[XMSS_SK_BYTES] sk
) -> reg ptr u8[XMSS_PK_BYTES], reg ptr u8[XMSS_SK_BYTES], reg u64
{
    reg u64 res;

    pk = pk; sk = sk; 

    pk, sk = __xmssmt_core_keypair_(pk, sk);

    pk = pk; sk = sk; 

    ?{}, res = #set0();
    return pk, sk, res;
}

export fn xmss_core_keypair_jazz(
    reg ptr u8[XMSS_PK_BYTES] pk, 
    reg ptr u8[XMSS_SK_BYTES] sk
) -> reg ptr u8[XMSS_PK_BYTES], reg ptr u8[XMSS_SK_BYTES], reg u64
{
    reg u64 res;

    pk = pk; sk = sk; 

    pk, sk = __xmssmt_core_keypair_(pk, sk);

    pk = pk; sk = sk; 

    ?{}, res = #set0();
    return pk, sk, res;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export fn build_auth_path_jazz(
    reg ptr u8[XMSS_TREE_HEIGHT * XMSS_N] auth_path,
    reg ptr u8[XMSS_N] sk_seed,
    reg ptr u8[XMSS_N] pub_seed,
    reg u32 i,
    reg ptr u32[8] addr
) -> reg ptr u8[XMSS_TREE_HEIGHT * XMSS_N]
{
    auth_path = __build_auth_path(auth_path, sk_seed, pub_seed, i, addr);
    return auth_path;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export fn tree_sig_jazz(
    reg ptr u8[(XMSS_WOTS_LEN * XMSS_N) + (XMSS_TREE_HEIGHT * XMSS_N)] sig, // wots signature + auth_path
    reg ptr u32[8] addr,
    reg ptr u8[XMSS_N] M,
    reg ptr u8[XMSS_SK_BYTES] sk,
    reg u32 idx_sig
) -> reg ptr u8[(XMSS_WOTS_LEN * XMSS_N) + (XMSS_TREE_HEIGHT * XMSS_N)], 
     reg ptr u32[8] 
{
    sig, addr = __tree_sig_(sig, M, sk, idx_sig, addr);
    return sig, addr;
}

*/

export fn xmssmt_core_sign_jazz(
    reg ptr u8[XMSS_SK_BYTES] sk,
    reg u64 sm_ptr smlen_ptr m_ptr mlen
) -> reg ptr u8[XMSS_SK_BYTES], reg u64
{
    reg u64 r;
    sk, r = __xmssmt_core_sign_(sk, sm_ptr, smlen_ptr, m_ptr, mlen);
    return sk, r;
}