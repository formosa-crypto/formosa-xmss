from Stdlib require "bytes/bytes.jtmpl" // TODO: Move to Stdlib/bytes
from Stdlib require "memcpy/memcpy.jtmpl"

/////////////////////////////////////////////////////////////////////// BYTES

export fn bytes_to_ull_jazz<INLEN>(reg u64 in_ptr) -> reg u64 {
    stack u8[INLEN] in;
    reg ptr u8[INLEN] in_p;

    reg u64 res;

    inline int i;

    for i=0 to INLEN { in[i] = (u8) [in_ptr + i]; }

    in_p = in;
    res = __bytes_to_ull<INLEN>(in_p);
    
    return res;
}//<>

export fn bytes_to_ull_ptr_jazz(reg u64 in_ptr inlen) -> reg u64 {
    reg u64 res;
    res = __bytes_to_ull_ptr(in_ptr, inlen);
    return res;
}

/////////////////////////////////////////////////////////////////////// MEMCPY

export fn memcpy_u8pu8p_jazz(reg u64 out_ptr offset_out in_ptr offset_in len) {
    _, _, _ = _x__memcpy_u8pu8p(out_ptr, offset_out, in_ptr, offset_in, len);
}