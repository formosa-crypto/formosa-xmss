from XMSS require "hash/hash.jtmpl"

export fn addr_to_bytes_jazz(
    reg ptr u8[32] addr_as_bytes,
    reg ptr u32[8] addr
) -> reg ptr u8[32] 
{
    addr_as_bytes = __addr_to_bytes(addr_as_bytes, addr);
    return addr_as_bytes;
}

export fn prf_jazz(
    reg ptr u8[XMSS_N] out,
    reg ptr u8[32] in,
    reg ptr u8[XMSS_N] key
) -> reg ptr u8[XMSS_N]
{
    out = __prf_(out, in, key);
    return out;
}

export fn prf_keygen_jazz(
    reg ptr u8[XMSS_N] out,
    reg ptr u8[XMSS_N + 32] in, 
    reg ptr u8[XMSS_N] key
) -> reg ptr u8[XMSS_N]
{
    out = __prf_keygen_(out, in, key);
    return out;
}

export fn hash_message_jazz(
    reg ptr u8[XMSS_N] mhash,
    reg ptr u8[XMSS_N] R,
    reg ptr u8[XMSS_N] root,
    reg u64 idx,
    reg u64 m_ptr mlen
) -> reg ptr u8[XMSS_N]
{
    mhash = __hash_message(mhash, R, root, idx, m_ptr, mlen);
    return mhash;
}

export fn thash_h_jazz(
    reg ptr u8[XMSS_N] out,
    reg ptr u32[8] addr,
    reg ptr u8[2 * XMSS_N] in,
    reg ptr u8[XMSS_N] pub_seed
) -> reg ptr u8[XMSS_N], reg ptr u32[8] 
{
    out, addr = __thash_h_(out, in, pub_seed, addr);
    return out, addr;
}

export fn thash_f_jazz(
    reg ptr u8[XMSS_N] out,
    reg ptr u32[8] addr,
    reg ptr u8[XMSS_N] pub_seed
) -> reg ptr u8[XMSS_N], reg ptr u32[8] 
{
    addr = __set_key_and_mask(addr, 0);
    out, addr = __thash_f_(out, pub_seed, addr);
    return out, addr;
}
