name: Compile and Test Jasmin

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main

jobs:
  build_image:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.tag.outputs.image-tag }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Generate image tag
        id: tag
        run: echo "image-tag=jasmin-xmss:${{ github.sha }}" >> "$GITHUB_OUTPUT"

      - name: Build and save Docker image
        run: |
          docker build -t jasmin-xmss:${{ github.sha }} .
          docker save jasmin-xmss:${{ github.sha }} | gzip > image.tar.gz

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: image.tar.gz

  compile:
    needs: build_image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test_dir:
          - test/hash_address
          - test/hash
          - test/wots
          # - test/treehash
          # - test/xmss_commons
          # - test/xmss_core
          # - test/xmss_core
          # - test/xmss

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load Docker image
        run: |
          gunzip -c image.tar.gz | docker load

      - name: Compile ${{ matrix.test_dir }}
        run: docker run --rm jasmin-xmss:${{ github.sha }} make -C ${{ matrix.test_dir }}

  run_tests:
    needs: build_image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test_dir:
          - test/hash_address
          - test/hash
          - test/wots
          # - test/treehash
          # - test/xmss_commons

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load Docker image
        run: |
          gunzip -c image.tar.gz | docker load

      - name: Run tests in ${{ matrix.test_dir }}
        run: docker run --rm jasmin-xmss:${{ github.sha }} make -C ${{ matrix.test_dir }} run
