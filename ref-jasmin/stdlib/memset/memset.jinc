inline
fn __memset_zero_u8(reg ptr u8[XMSS_INDEX_BYTES] a) -> reg ptr u8[XMSS_INDEX_BYTES] {
    reg u64 i;

    // Obs: XMSS_INDEX_BVYTES \in {3,4,5,8} 
    // ==> Run `cat *.jinc | grep "param int XMSS_INDEX_BYTES" | cut -d '=' -f2 | tr -d ';' | sort -u` in ref-jasmin/params

    // Obs: This if statement is resolved at compile time
    if (XMSS_INDEX_BYTES == 4) {
        a[u32 0] = 0;
    } else if (XMSS_INDEX_BYTES == 8) {
        a[u64 0] = 0;
    } else {
        i = 0;
        while (i < XMSS_INDEX_BYTES) { a[i] = 0; i += 1; }
    }

    return a;
}

inline
fn __memset_u8_ptr(reg u64 _ptr inlen, reg u8 value) {
    reg u64 i;

    i = 0;
    
    while (i < inlen) {
        (u8) [_ptr + i] = value;
        i += 1;
    }
}

namespace memset_idx_bytes {
    param int INLEN = XMSS_INDEX_BYTES;
    require "__memset.jinc"
}

namespace memset_i {
    param int INLEN = XMSS_SK_BYTES - XMSS_INDEX_BYTES;
    require "__memset.jinc"
}