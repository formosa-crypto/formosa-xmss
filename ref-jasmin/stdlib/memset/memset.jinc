inline
fn __memset_zero_u8(reg ptr u8[XMSS_INDEX_BYTES] a) -> reg ptr u8[XMSS_INDEX_BYTES] {
    reg u64 i;

    i = 0;
    while (i < XMSS_INDEX_BYTES) {
        a[i] = 0;
        i += 1;
    }

    return a;
}

inline
fn __memset_u8_ptr(reg u64 _ptr inlen, reg u8 value) {
    reg u64 i;

    i = 0;
    
    while (i < inlen) {
        (u8) [_ptr + i] = value;
        i += 1;
    }
}

namespace memset_idx_bytes {
    param int INLEN = XMSS_INDEX_BYTES;
    require "__memset.jinc"
}

namespace memset_i {
    param int INLEN = XMSS_SK_BYTES - XMSS_INDEX_BYTES;
    require "__memset.jinc"
}